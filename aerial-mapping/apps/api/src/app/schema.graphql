scalar DateTime

type Query {
  test: String
  getUserByEmail(email: String): User
  getUsers: [User]
  getCurrentUserEmail: String
  getParks: [Game_Park]
  getParkId(name: String): Int
  pingAuthentication: String!
  getMessages: [Message]
  getImagesByCollectionId(id: Int): [Images]
  getNumOfVidsPerDate: Int!
  getAuthStatus: Boolean!
  getImageCollections: [Image_Collection]
  getImage(imageID: Int): Images
  getCatalogues: [Image_Collection]
}

type Mutation {
  invite(email: String): String
  registerUser(name: String, email: String, password: String, role: String, approved: Boolean): User
  createImageCollection(parkID: Int,  name: String, flightID: Int): Image_Collection
  login(email: String, password: String): String
  logout: String
  createFlight(pilotID: Int, height: Int, type: String): Flight_details
  createImage(collectionID: Int ,bucket_name: String, file_name: String): Images
}

type User {
  userID: Int!
  user_email: String
  user_password: String
  user_password_salt: String
  user_name: String
  user_surname: String
  user_role: String
  user_approved: Boolean
}

type Game_Park {
  parkID: Int!
  park_name: String
  park_location: String
  park_address: String
}

# type Video {
#   videoID: Int!
#   flightID: Int
#   #video_title: String
#   #video_description: String
#   file_location: String
#   #video_thumbnail: String
#   duration: String
#   filmed_date_time: DateTime
#   #video_user: User
# }


type Image_Collection {
  collectionID: Int!
  parkID: Int
  upload_date_time: DateTime
  completed: Boolean
  flightID: Int
}

type Message {
  messageID: Int!
  message_status: String
  message_description: String
  collectionID: Int
  Image_Collection: Image_Collection
}

# type Video_In_Collection {
#   collectionID: Int!
#   videoID: Int!
#   video_order: Int!
# }

type Images {
  imageID: Int!
  collectionID: Int
  name: String
  bucket_name: String
  file_name: String
}

type Flight_details {
  flightID: Int!
  flight_height: Float
  flight_type: String
  pilotID:Int
}

type Pending_Invites {
  inviteID: Int!
  email: String
}
