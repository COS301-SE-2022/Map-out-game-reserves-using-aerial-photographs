scalar DateTime

type Query {
  test: String
  getUsers: [User]
  getParks: [Game_Park]
  pingAuthentication: String!
  getMessages: [Message]
  getVideoCollections: [Video_Collection]
  getNumOfVidsPerDate: Int!
}

type Mutation {
  createUser(firstname: String, lastname: String, email: String, password: String, role: String, approved: Boolean): String!
  createVideoCollection(parkID: Int, datetime: DateTime): String!
  login(email: String, password: String): String
  S3Upload: String
}

type User {
  userID: Int!
  user_email: String
  user_password: String
  user_password_salt: String
  user_name: String
  user_surname: String
  user_role: String
  user_approved: Boolean
}

type Game_Park {
  parkID: Int!
  park_name: String
  park_location: String
  park_address: String
}

type Video {
  videoID: Int!
  flightID: Int
  #video_title: String
  #video_description: String
  file_location: String
  #video_thumbnail: String
  duration: String
  filmed_date_time: DateTime
  #video_user: User
}

type Video_Collection {
  collectionID: Int!
  parkID: Int
  upload_date_time: DateTime
  completed: Boolean
}

type Message {
  messageID: Int!
  message_status: String
  message_description: String
  collectionID: Int
  Video_Collection: Video_Collection
}

type Video_In_Collection {
  collectionID: Int!
  videoID: Int!
  video_order: Int!
}

type Images {
  imageID: Int!
  videoID: Int
  file_location: String
}

type Flight_details {
  flightID: Int!
  flight_height: Float
  flight_type: String
  pilotID:Int
}
